#!/bin/bash

set -eu
set -o pipefail

PATH=/usr/local/bin:$PATH

# Check OS X system settings.  Note that the Homebrew terminology is
# different from OS X:
#
# Homebrew: update -> fetch -> upgrade
# OS X: check -> download -> update
#
auto_update=$(defaults read /Library/Preferences/com.apple.SoftwareUpdate AutomaticCheckEnabled)
auto_fetch=$(defaults read /Library/Preferences/com.apple.SoftwareUpdate AutomaticDownload)
auto_upgrade=$(defaults read /Library/Preferences/com.apple.commerce AutoUpdate)

if [ "$auto_update" != 1 ]; then
    exit
fi

if [ "$(scutil -r github.com)" != 'Reachable' ]; then
    exit
fi

for termapp in iTerm Terminal; do
    if termapp_id=$(osascript -e "id of app \"$termapp\"" 2>/dev/null) && [ -n "$termapp_id" ]; then
        break
    fi
done

if ! out=$(brew update 2>&1); then
    terminal-notifier \
        -group 'org.eisentraut.BrewAutoUpdate' \
        -sound 'Glass' \
        -title 'Homebrew' \
        -subtitle 'update failed' \
        -message "$out" \
        -activate "$termapp_id" \
        >/dev/null
    exit 1
fi

if printf "%s" "$out" | grep 'Already up-to-date.'; then
    exit 1
else

    outdated=$(brew outdated | tr '\n' ' ' | sed 's/ $//')
    notifications=$(terminal-notifier -list org.eisentraut.BrewAutoUpdate)

    if [ -n "$outdated" ]; then
        if [ "$auto_upgrade" = 1 ]; then
            brew upgrade || :
            outdated=$(echo "upgraded $outdate")
        elif [ "$auto_fetch" = 1 ]; then
            brew fetch $outdated || :
            outdated=$(echo "fetched $outdate")
        fi

        terminal-notifier \
            -group 'org.eisentraut.BrewAutoUpdate' \
            -sound 'Bottle' \
            -title 'Homebrew' \
            -subtitle 'package updates' \
            -message "$outdated" \
            -activate "$termapp_id" \
            >/dev/null
    elif [ -z "$outdated" ] && [ -n "$notifications" ]; then
        terminal-notifier -remove 'org.eisentraut.BrewAutoUpdate' >/dev/null
    fi
fi
